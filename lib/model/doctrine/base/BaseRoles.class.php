<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Roles', 'doctrine');

/**
 * BaseRoles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $role_id
 * @property string $name
 * @property Doctrine_Collection $Systemuser
 * @property Doctrine_Collection $Menu
 * 
 * @method integer             getRoleId()     Returns the current record's "role_id" value
 * @method string              getName()       Returns the current record's "name" value
 * @method Doctrine_Collection getSystemuser() Returns the current record's "Systemuser" collection
 * @method Doctrine_Collection getMenu()       Returns the current record's "Menu" collection
 * @method Roles               setRoleId()     Sets the current record's "role_id" value
 * @method Roles               setName()       Sets the current record's "name" value
 * @method Roles               setSystemuser() Sets the current record's "Systemuser" collection
 * @method Roles               setMenu()       Sets the current record's "Menu" collection
 * 
 * @package    space
 * @subpackage model
 * @author     Javkhlan Gansukh
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRoles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('roles');
        $this->hasColumn('role_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Systemuser', array(
             'local' => 'role_id',
             'foreign' => 'role_id'));

        $this->hasMany('Menu', array(
             'refClass' => 'LinkingRoleMenu',
             'local' => 'role_id',
             'foreign' => 'menu_id'));
    }
}